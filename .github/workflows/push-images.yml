name: push-images
run-name: Deploy to SSH
on:
  push:
    branches:
      - '**'
jobs:
  deploy-to-ssh:
    runs-on: ubuntu-latest
    #double quotes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build image
        run: ./gradlew clean bootJar -PprojVersion=$(date "+%Y%m%d-%H%M%S")

      - name: Push image to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Check if known_hosts file exists
        run: |
          if [ ! -f ~/.ssh/known_hosts ]; then
            touch ~/.ssh/known_hosts
          fi

      - name: Update known_hosts
        run: ssh-keyscan -t rsa ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to SSH
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          EXCLUDE: ".git*"
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            echo $CR_PAT | docker login ghcr.io -u devisitem --password-stdin
            docker pull ghcr.io/devisitem/mf-content-api:latest
            docker service update --replicas 2 --network mf_network --image ghcr.io/devisitem/mf-content-api:latest --update-parallelism 1 --update-delay 5s mf-content-api
            echo "in zibi-server"
            whoami
            ls -al